<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Resolução de Exercício</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .step-input { margin-bottom: 10px; }
    .step-valid { background-color: #d4edda; }  /* verde */
    .step-invalid { background-color: #f8d7da; } /* vermelho */
    .step-final { background-color: #d0e7ff; }   /* azul */
    .step-final:disabled { background-color: #d0e7ff; opacity: 1; } /* azul quando desabilitado */
  </style>
</head>
<body>
  <div class="container">
    <h1>Resolução de Exercício</h1>
    <p><strong>Problema:</strong> <%= problem.statement %></p>
    <div id="steps-container">
      <!-- Campos para inserção de passos -->
    </div>
    <button id="add-step" class="btn btn-primary">Adicionar Passo</button>
    <div id="solution-steps"></div>
  </div>

  <script>
    const stepsContainer = document.getElementById('steps-container');
    const addStepButton = document.getElementById('add-step');
    const solutionStepsContainer = document.getElementById('solution-steps');
    const finalAnswer = '<%= problem.result %>'; // A resposta final do problema

    addStepButton.addEventListener('click', () => {
      const stepInput = document.createElement('input');
      stepInput.type = 'text';
      stepInput.className = 'form-control step-input';
      stepInput.placeholder = 'Insira o próximo passo';

      stepInput.addEventListener('blur', async () => {
        const nextStep = stepInput.value;

        const response = await fetch('/api/student/submit-step', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ nextStep, finalAnswer })
        });

        const result = await response.json();

        solutionStepsContainer.innerHTML = '';
        if (result.steps && result.steps.length > 0) {
          result.steps.forEach(step => {
            const stepElement = document.createElement('p');
            stepElement.textContent = step;
            solutionStepsContainer.appendChild(stepElement);
          });

          if (result.isFinalAnswer) {
            stepInput.classList.add('step-final');
            stepInput.classList.remove('step-valid', 'step-invalid');
            addStepButton.disabled = true; // Desabilitar o botão de adicionar passo
            stepInput.disabled = true; // Desabilitar o campo de entrada
          } else if (result.valid) {
            stepInput.classList.add('step-valid');
            stepInput.classList.remove('step-invalid', 'step-final');
          } else {
            stepInput.classList.add('step-invalid');
            stepInput.classList.remove('step-valid', 'step-final');
          }
        } else {
          const errorMessage = document.createElement('p');
          errorMessage.textContent = 'Nenhuma solução encontrada.';
          solutionStepsContainer.appendChild(errorMessage);
          stepInput.classList.add('step-invalid');
          stepInput.classList.remove('step-valid', 'step-final');
        }
      });

      stepsContainer.appendChild(stepInput);
    });
  </script>
</body>
</html>



<!--
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.amazonaws.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
 -->